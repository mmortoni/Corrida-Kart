{"version":3,"sources":["../../app-es6/dao/CorridaDao.js"],"names":["Corrida","CorridaDao","connection","_connection","_store","corrida","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","corridas","atual","result","dado","value","push","_corrida","_horaLargada","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,mB,kBAAAA,O;;;;;;;;;;;;;;;;;;;;;kCAEKC,U;AAET,oCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,UAAd;AACH;;;;6CAEQC,O,EAAS;AAAA;;AACb,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,OAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,uCAAP;AACH,6BAHD;AAIH,yBAdO,CAAP;AAeJ;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,WAAW,EAAf;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAGD,KAAH,EAAU;AACN,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,6CAASK,IAAT,CAAc,IAAI3B,OAAJ,CAAYyB,KAAKG,QAAjB,EAA2BH,KAAKI,YAAhC,CAAd;AACAN,0CAAMO,QAAN;AACH,iCAJD,MAIO;AACHvB,4CAAQe,QAAR;AACH;AACJ,6BAVD;;AAYAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,sCAAP;AACH,6BAHD;AAIH,yBAxBM,CAAP;AAyBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT2B,KAHS,EAAd;;AAKAtB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,gCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,sCAAP;AACH,6BAHD;AAIH,yBAbM,CAAP;AAcH","file":"CorridaDao.js","sourcesContent":["import {Corrida} from '../models/Corrida';\r\n\r\nexport class CorridaDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'corridas';\r\n    }\r\n\r\n    adiciona(corrida) {\r\n         return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(corrida);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a corrida!');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let corridas = [];\r\n\r\n            cursor.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if(atual) {\r\n                    let dado = atual.value;\r\n                    corridas.push(new Corrida(dado._corrida, dado._horaLargada));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(corridas);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível listar as corridas!');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Corridas apagadas com sucesso!');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível apagar as corridas!');\r\n            }; \r\n        });\r\n    }\r\n}\r\n"]}