{"version":3,"sources":["../../app-es6/dao/TomadaDeTempoDao.js"],"names":["TomadaDeTempo","TomadaDeTempoDao","connection","_connection","_store","tomadaDeTempo","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","tomadaDeTempos","atual","result","dado","value","push","Negociacao","_corrida","_piloto","_tempo","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,yB,wBAAAA,a;;;;;;;;;;;;;;;;;;;;;wCAEKC,gB;AAET,0CAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,gBAAd;AACH;;;;6CAEQC,a,EAAe;AAAA;;AAEpB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,aAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,6BAHD;;AAKAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,+CAAP;AAEH,6BAJD;AAKH,yBAhBM,CAAP;AAiBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,iBAAiB,EAArB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;AACpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAGD,KAAH,EAAU;AACN,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,mDAAeK,IAAf,CAAoB,IAAIC,UAAJ,CAAeH,KAAKI,QAApB,EAA8BJ,KAAKK,OAAnC,EAA4CL,KAAKM,MAAjD,CAApB;AACAR,0CAAMS,QAAN;AAEH,iCALD,MAKO;AACHzB,4CAAQe,cAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,+CAAP;AACH,6BAHD;AAIH,yBA1BM,CAAP;AA2BH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAKAxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,yCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,+CAAP;AACH,6BAHD;AAIH,yBAZM,CAAP;AAaH","file":"TomadaDeTempoDao.js","sourcesContent":["import {TomadaDeTempo} from '../models/TomadaDeTempo';\n\nexport class TomadaDeTempoDao {\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'tomadadetempos';\n    }\n\n    adiciona(tomadaDeTempo) {\n\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(tomadaDeTempo);\n\n            request.onsuccess = e => {\n\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a tomada de tempo!');\n\n            };\n        });\n    }\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n            let tomadaDeTempos = [];\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n\n                if(atual) {\n                    let dado = atual.value;\n                    tomadaDeTempos.push(new Negociacao(dado._corrida, dado._piloto, dado._tempo));\n                    atual.continue();\n\n                } else {\n                    resolve(tomadaDeTempos);\n                }\n            };\n\n            cursor.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível listar as tomadas de tempos!');\n            };\n        });\n    }\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n            request.onsuccess = e => resolve('Tomadas de tempos apagadas com sucesso!');\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível apagar as tomadas de tempos!');\n            }; \n        });\n    }\n}\n"]}