{"version":3,"sources":["../../app-es6/views/CorridaView.js"],"names":["View","DateHelper","corridaCurrentInstance","CorridaView","elemento","addEventListener","event","target","nodeName","ordena","textContent","toLowerCase","model","voltas","dl","nome","hora","mvc","piloto","tempo","vencedor","codigo","tmvp","horaChegadaVencedor","horaChegadaPiloto","tempoDiferenca","diff","corridas","filter","voltaPiloto","numero","reduce","prev","current","Number","replace","velocidadeMedia","forEach","volta","voltasPiloto","push","Date","map","v","setTime","getTime","getMinutes","getSeconds","Array","join","slice","getMilliseconds","n","horaLargada"],"mappings":"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","file":"CorridaView.js","sourcesContent":["import {View} from './View';\nimport {DateHelper} from '../helpers/DateHelper';\nimport {corridaCurrentInstance} from '../controllers/CorridaController';\n\nexport class CorridaView extends View {\n\n    constructor(elemento) {\n\n        super(elemento);\n\n        elemento.addEventListener('click', function(event) {\n\n            if(event.target.nodeName == 'TH')\n                corridaCurrentInstance().ordena(event.target.textContent.toLowerCase());    \n        });\n    }\n\n    template(model) {\n        let voltas = [],\n            dl = [{nome:'', hora:''}],\n            mvc = {piloto:{nome:''}, tempo:''},\n            vencedor = {piloto:{nome:''}, hora:''},\n            codigo = '',\n            tmvp = [],\n            horaChegadaVencedor, horaChegadaPiloto, tempoDiferenca, diff;\n        \n        if (model.corridas[0]){\n            voltas = model.corridas[0].voltas;\n\n            vencedor = voltas\n            .filter(voltaPiloto => voltaPiloto.numero ==  '4')\n            .reduce(function(prev, current) {\n                return ((Number(prev.hora.replace(/:/g, '')) < Number(current.hora.replace(/:/g, '')) && prev.numero == '4') ? prev : current)\n            });\n\n            mvc = voltas.reduce(function(prev, current) {\n                return (Number(prev.velocidadeMedia.replace(',', '.')) > Number(current.velocidadeMedia.replace(',', '.')) ? prev : current)\n            });\n\n            voltas.forEach(volta => {\n                if(volta.piloto.codigo != codigo ){\n                    codigo = volta.piloto.codigo;\n                    let voltasPiloto = voltas.filter(voltaPiloto => voltaPiloto.piloto.codigo ==  codigo);\n                    \n                    tmvp.push(\n                        voltasPiloto.reduce(function(prev, current) {\n                            return (Number(prev.velocidadeMedia.replace(',', '.')) > Number(current.velocidadeMedia.replace(',', '.')) ? prev : current)\n                        })\n                    );\n                }\n            });\n\n            horaChegadaVencedor = new Date('01/01/1970 ' + vencedor.hora);\n            diff = new Date('01/01/1970 ');\n\n            dl = [];\n            voltas\n            .filter(volta => volta.numero ==  '4')\n            .map(v => {\n                if(v.piloto.codigo != vencedor.piloto.codigo){\n                    horaChegadaPiloto  = new Date('01/01/1970 ' + v.hora);\n                    diff.setTime(horaChegadaPiloto.getTime() - horaChegadaVencedor.getTime());\n                    \n                    tempoDiferenca='';\n\n                    if(diff.getMinutes() > 0)\n                        tempoDiferenca = diff.getMinutes(); //(Array(2).join(\"0\") + diff.getMinutes()).slice(-2);\n\n                    if(diff.getSeconds() > 0) {\n                        if(tempoDiferenca){\n                            tempoDiferenca += ':' + (Array(2).join(\"0\") + diff.getSeconds()).slice(-2);\n                        } else {\n                            tempoDiferenca = (Array(2).join(\"0\") + diff.getSeconds()).slice(-2);\n                        }\n                    }\n\n                    tempoDiferenca += '.' + (Array(3).join(\"0\") + diff.getMilliseconds()).slice(-3);\n\n                    dl.push({nome: v.piloto.nome, hora: tempoDiferenca});\n                }\n            });\n        }\n\n        return `\n         <div class=\"person\">\n            <h2>Hora Largada: \n                ${model.corridas.map(n => `\n                    ${n.horaLargada}\n                `)} \n            </h2>\n        </div>\n\n        <table class=\"table table-hover table-bordered\">\n\n            <thead>\n                <tr>\n                    <th>VOL</th>\n                    <th>PILOTO</th>\n                    <th>HORA</th>\n                    <th>TEMPO</th>\n                    <th>VM</th>\n                </tr>\n            </thead>\n\n            <tbody>\n\n                ${voltas.map(n => `\n                    <tr>\n                        <td>${n.numero}</td>\n                        <td>${n.piloto.codigo + ' - ' + n.piloto.nome}</td>\n                        <td>${n.hora}</td>\n                        <td>${n.tempo}</td>\n                        <td>${n.velocidadeMedia}</td>\n                    </tr>\n                    \n                `).join('')\n\t\t\t\t}\n\n                <tr>\n                    <td colspan=\"5\" bgcolor=\"#5D7B9D\">VENCEDOR: ${vencedor.piloto.nome} &nbsp;&nbsp;&nbsp; CHEGADA = ${vencedor.hora}</td>\n                </tr>\n\n                <tr>\n                    <td colspan=\"5\">MVC: ${mvc.piloto.nome} &nbsp;&nbsp;&nbsp; TMV = ${mvc.tempo}</td>\n                </tr>\n\n                ${tmvp.map(n => `\n                    <tr>\n                        <td colspan=\"5\">TMVP: ${n.piloto.nome} &nbsp;&nbsp;&nbsp; TMV = ${n.tempo}</td>\n                    </tr>\n                    \n                `).join('')\n\t\t\t\t}\n\n                ${dl.map(n => `\n                    <tr>\n                        <td colspan=\"5\">DL: ${n.nome} &nbsp;&nbsp;&nbsp; DIFERENÇA = ${n.hora}</td>\n                    </tr>\n                    \n                `).join('')\n\t\t\t\t}\n            </tbody>\n\n            <tfoot>\n                <tr>\n                    <td colspan=\"5\">LEGENDA:<br>\n                        <table width=\"100%\">\n                            <tr><td>VOL = Nº DA VOLTA</td><td>MVC = MELHOR VOLTA DA CORRIDA</td></tr>\n                            <tr><td>TMVP = TEMPO DA MELHOR VOLTA PILOTO</td><td>DL = DIFERENÇA PARA O LÍDER</td></tr>\n                            <tr><td>VM (Km/h) = VELOCIDADE MÉDIA</td><td>TAV = TEMPO APÓS O VENCEDOR</td></tr>\n                        </table>\n                    </td>\n                </tr>\n            </tfoot>\n\n        </table>\n        `;\n    }\n}\n/*\n---Descobrir a melhor volta de cada piloto\n---Descobrir a melhor volta da corrida\n---Calcular a velocidade média de cada piloto durante toda corrida\nDescobrir quanto tempo cada piloto chegou após o vencedor\n\n\nLEGENDA:\nPOS = POSIÇÃO\n# = Nº COMPETIDOR\nMV = Nº DA MELHOR VOLTA\nTMV = TEMPO DA MELHOR VOLTA\nTT = TEMPO TOTAL\nDL = DIFERENÇA PARA O LÍDER\nDA = DIFERENÇA PARA O ANTERIOR\nTUV = TEMPO DA ÚLTIMA VOLTA\nTV = TOTAL DE VOLTAS\nVM (Km/h) = VELOCIDADE MÉDIA\nUF = UNIDADE FEDERATIVA\n\nPENALIZAÇÕES:\nOBSERVAÇÕES DA PROVA\n*/"]}