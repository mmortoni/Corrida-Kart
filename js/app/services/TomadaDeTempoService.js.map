{"version":3,"sources":["../../app-es6/services/TomadaDeTempoService.js"],"names":["HttpService","ConnectionFactory","TomadaDeTempoDao","TomadaDeTempo","TomadaDeTempoService","_http","tomadaDeTempo","getConnection","then","connection","dao","adiciona","catch","console","log","erro","Error","listaTodos","apagaTodos"],"mappings":";;;;;;;;;;;;;;;AAAQA,uB,gBAAAA,W;;AACAC,6B,sBAAAA,iB;;AACAC,4B,wBAAAA,gB;;AACAC,yB,wBAAAA,a;;;;;;;;;;;;;;;;;;;;;4CAEKC,oB;AAET,gDAAc;AAAA;;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;;;6CAEQM,a,EAAe;AACpB,+BAAOL,kBACFM,aADE,GAEFC,IAFE,CAEG;AAAA,mCAAc,IAAIN,gBAAJ,CAAqBO,UAArB,CAAd;AAAA,yBAFH,EAGFD,IAHE,CAGG;AAAA,mCAAOE,IAAIC,QAAJ,CAAaL,aAAb,CAAP;AAAA,yBAHH,EAIFE,IAJE,CAIG;AAAA,mCAAM,wCAAN;AAAA,yBAJH,EAKFI,KALE,CAKI,gBAAQ;AACXC,oCAAQC,GAAR,CAAYC,IAAZ;AACA,kCAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH,yBARE,CAAP;AASH;;;4CAEO;AACJ,+BAAOf,kBACEM,aADF,GAEEC,IAFF,CAEO;AAAA,mCAAc,IAAIN,gBAAJ,CAAqBO,UAArB,CAAd;AAAA,yBAFP,EAGED,IAHF,CAGO;AAAA,mCAAOE,IAAIO,UAAJ,EAAP;AAAA,yBAHP,EAIEL,KAJF,CAIQ,gBAAQ;AACXC,oCAAQC,GAAR,CAAYC,IAAZ;AACA,kCAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACH,yBAPF,CAAP;AAQH;;;4CAEO;AACJ,+BAAOf,kBACFM,aADE,GAEFC,IAFE,CAEG;AAAA,mCAAc,IAAIN,gBAAJ,CAAqBO,UAArB,CAAd;AAAA,yBAFH,EAGFD,IAHE,CAGG;AAAA,mCAAOE,IAAIQ,UAAJ,EAAP;AAAA,yBAHH,EAIFV,IAJE,CAIG;AAAA,mCAAM,yCAAN;AAAA,yBAJH,EAKFI,KALE,CAKI,gBAAQ;AACXC,oCAAQC,GAAR,CAAYC,IAAZ;AACA,kCAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH,yBARE,CAAP;AASH","file":"TomadaDeTempoService.js","sourcesContent":["import {HttpService}       from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {TomadaDeTempoDao}  from '../dao/TomadaDeTempoDao';\nimport {TomadaDeTempo}     from '../models/TomadaDeTempo';\n\nexport class TomadaDeTempoService {\n    \n    constructor() {\n        this._http = new HttpService();\n    }\n    \n    cadastra(tomadaDeTempo) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new TomadaDeTempoDao(connection))\n            .then(dao => dao.adiciona(tomadaDeTempo))\n            .then(() => 'Tomada de Tempo adicionada com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar a tomada de tempo!')\n            });\n    }\n\n    lista() {\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new TomadaDeTempoDao(connection))\n                .then(dao => dao.listaTodos())\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as tomadas de tempos!')\n                })\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new TomadaDeTempoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Tomadas de Tempos apagadas com sucesso!')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as tomadas de tempos!')\n            })\n    }\n}"]}